@page "/login"

@using BattleShipV3.Client.DesignPatterns.Singleton
@using BattleShipV3.Shared.Data.Commands.User.Create
@using Microsoft.AspNetCore.SignalR.Client
@using MudBlazor;
@using Radzen.Blazor
@using Models
@using BattleShipV3.Shared
@using System.Net

@inject ToastService toastService
@inject NavigationManager navigation
@*@using BattleShipV3.Server*@

@inject UserService userService


<MudContainer Class="mt-12" MaxWidth="MaxWidth.Small">
    <MudPaper Elevation="2" Class="pa-4" Style="height: 400px;">
    <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Login</MudText>
    <MudGrid Spacing="6" Class="mt-16">
        <MudItem xs="12">
            <MudText Typo="Typo.h5" GutterBottom="true">Your information</MudText>
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField T="string" InputType="InputType.Email" @bind-Value="_email" Label="Email" />
                </MudItem>

                <MudItem xs="12">
                    <MudTextField T="string" InputType="InputType.Password" @bind-Value="_password" Label="Password" />
                </MudItem>
                <MudItem xs="12" Class="d-flex justify-center">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(async () => await LoginUser())">Login</MudButton>
                </MudItem>
                <MudItem xs="12" Class="d-flex justify-center">
                    <MudButton Variant="Variant.Text" OnClick="NavigateToRegister">Don't have an account? Register here</MudButton>
                </MudItem>
            </MudGrid>
        </MudItem>

        </MudGrid>
    </MudPaper>
</MudContainer>
@code {
    string _email { get; set; }
    string _password { get; set; }

    private HubConnection? hubConnection;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
                .WithUrl(navigation.ToAbsoluteUri("/lobbyhub"))
                .WithAutomaticReconnect()
                .Build();

        await hubConnection.StartAsync();
    }

    protected async Task LoginUser()
    {
        if (UserIsValid())
        {
            await Task.Run(() => toastService.ShowToast("Created", Data.Enums.ToastLevel.Success));
            await toastService.ShowToastAsync("Created", Data.Enums.ToastLevel.Success);
            var user = await userService.GetUserAsync(_email);
            if (user == null)
                return;

            if (user.Password != _password)
                return;

            BattleShipV3.Shared.Global.CurrentUser = user;
            //TOAST NEVEIKIA
            await Task.Run(() => toastService.ShowToast("Created", Data.Enums.ToastLevel.Success));
            await toastService.ShowToastAsync("Created", Data.Enums.ToastLevel.Success);
            OnlinePlayersSingleton.OnlineUsers.Add(user);
            
            await hubConnection.SendAsync("UserLoggedIn", user);

            navigation.NavigateTo("/");
        }
        else
        {
            await Console.Out.WriteLineAsync("Neveikia");
            //await Task.Run(() => toastService.ShowToast("Info", Data.Enums.ToastLevel.Error));
            //await toastService.ShowToastAsync("Info", Data.Enums.ToastLevel.Error);
        }
    }

    private void NavigateToRegister()
    {
        navigation.NavigateTo("/register");
    }

    protected bool UserIsValid()
    {
        if (!_email.Contains('@') || _email is null)
        {
            return false;
        }
        else if (_password.Length < 3 || _password is null)
        {
            return false;
        }
        return true;
    }
}
