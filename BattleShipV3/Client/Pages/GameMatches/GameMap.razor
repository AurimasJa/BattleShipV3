@using BattleShipV3.Client.DesignPatterns
@using BattleShipV3.Client.DesignPatterns.Bridge
@using BattleShipV3.Client.DesignPatterns.Command
@using BattleShipV3.Client.DesignPatterns.Prototype
@using BattleShipV3.Data.Models
@using BattleShipV3.Shared.Data.Models
@using static BattleShipV3.Data.Enums
@using BattleShipV3.Shared.Data.Interfacess

<h2 style="text-align: center">@GetPhase()</h2>

@if(Player != null && Player.User != null && Player.Ships != null && actualMap != null)
{
    <MudItem>
        <MudGrid Spacing="10" Justify="Justify.SpaceBetween">
        <MudItem>
            <MudGrid Spacing="1">
                @for(int i = 0; i < 10; i++)
                {
                    int x = i;
                    <MudItem>
                        @for(int j = 0; j < 10; j++)
                            {
                            int y = j;
                            <MudItem Style="margin-bottom:5px">
                                @if(actualMap.playField[x][y].squareType == SquareType.SHIP)
                                {
                                    <MudPaper @onclick="() => OnClickGridPaper(x,y,false)" Style="@ColorEnumToHex(actualMap.playField[x][y].ship)"
                                        Square="true" Height="25px" Width="25px"></MudPaper>
                                }
                                else if(actualMap.playField[x][y].squareType == SquareType.DESTROYED)
                                {
                                    <MudPaper @onclick="() => OnClickGridPaper(x,y,false)" Style="background:#B71C1C"
                                        Square="true" Height="25px" Width="25px"></MudPaper>
                                }
                                else if(actualMap.playField[x][y].squareType == SquareType.MISSED)
                                {
                                    <MudPaper @onclick="() => OnClickGridPaper(x,y,false)" Style="background:#37474F"
                                        Square="true" Height="25px" Width="25px"></MudPaper>
                                }
                                else
                                {
                                    <MudPaper @onclick="() => OnClickGridPaper(x,y,false)" Square="true" Height="25px" Width="25px" ></MudPaper>
                                }
                                
                            </MudItem>
                            }
                    </MudItem>
                }
            </MudGrid>
        </MudItem>

        <MudItem>
            <MudGrid Spacing="1">
                @for(int i = 0; i< 10; i++)
                {
                    int x2 = i;
                    <MudItem >
                        @for(int j = 0; j < 10; j++)
                        {
                            int y2 = j;
                            <MudItem Style="margin-bottom:5px">
                                @*//Ship hit*@
                                @if(HitMap[x2][y2] == true)
                                {
                                    <MudPaper Style="background:#B71C1C"
                                            Square="true" Height="25px" Width="25px"></MudPaper>
                                }
                                //Miss
                                else if (HitMap[x2][y2] == false)
                                {
                                    <MudPaper Style="background:#37474F"
                                            Square="true" Height="25px" Width="25px"></MudPaper>
                                }
                                //NONE
                                else
                                {
                                    <MudItem Style="margin-bottom:5px">
                                    <MudPaper @onclick="() => OnClickGridPaper(x2,y2, true)" Square="true" Height="25px" Width="25px" ></MudPaper>
                                </MudItem>
                                }
                            </MudItem>
                        }
                    </MudItem>
                }
            </MudGrid>
        </MudItem>
        </MudGrid>
    </MudItem>
    @*&& item.Id == selectedShip.Id*@
    @*selectedShip != null*@
    @if(gamePhase == GamePhase.LAYOUT)
    {
        @foreach (var item in Player.Ships)
        {
            <MudButton Color="Color.Secondary" Variant="Variant.Filled" @onclick="() => SelectShip(item)"
                Disabled="PlacedShips.Contains(item)" Style="margin:5px">@(item.Name + " " + item.Length)</MudButton>
        }

        <MudButton Color="Color.Secondary" Variant="Variant.Filled" @onclick="() => IsRotated(selectedShip)"
            Disabled="selectedShip == null" Style="margin:5px">Rotate</MudButton>

        <br />

        <MudButton Color="Color.Secondary" Variant="Variant.Filled" @onclick="() => ChangeShipColor(selectedShip, ShipColor.ORANGE)"
            Disabled="selectedShip == null" Style="margin:5px">Change Ship Color (Orange)</MudButton>

            <MudButton Color="Color.Secondary" Variant="Variant.Filled" @onclick="() => ChangeShipColor(selectedShip, ShipColor.PURPLE)"
            Disabled="selectedShip == null" Style="margin:5px">Change Ship Color (Purple)</MudButton>

    <MudGrid Spacing="2" Justify="Justify.SpaceBetween">
        <MudItem>
            <MudPaper Style="min-width:100px;max-width:400px;min-height:100px;">
                    <h3>DeepCopies</h3>
                @foreach (var item in actualMap.playSquaresDeep)
                {
                    @*, ActionTime: @item.squareActionTime*@
                    <p>Xcoord: @item.squareXcoor, Ycoord: @item.squareYcoor, ActionOnSquare: @item.squareAction</p>
                }
                <p>----------------------------------------------</p>

            </MudPaper>
        </MudItem>
        <MudItem>
            <MudPaper Style="min-width:100px;max-width:400px;min-height:100px;">
                    <h3>ShallowCopies</h3>
                @foreach (var item in actualMap.playSquaresShallow)
                {
                    @*, ActionTime: @item.squareActionTime*@
                    <p>Xcoord: @item.squareXcoor, Ycoord: @item.squareYcoor, ActionOnSquare: @item.squareAction</p>
                }
                <p>----------------------------------------------</p>

            </MudPaper>
        </MudItem>
    </MudGrid>
    }
}



